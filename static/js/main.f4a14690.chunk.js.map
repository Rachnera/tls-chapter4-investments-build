{"version":3,"sources":["worker.js","first-round/Form.js","results/Ledger.js","results/Addition.js","givini.js","results/Givini.js","results/index.js","Failure.js","first-round/index.js","Disclaimer.js","Loading.js","App.js","reportWebVitals.js","index.js"],"names":["addMethods","methods","module","exports","w","Worker","name","possiblePrevious","initialValues","previous","remainingPron","baseProfit","chapter1Bank","chapter1Steel","strategy","startingSocial","chapter3Infrastructure","merchantSolution","jhenno","magicalItems","isMerchantCompromiseAvailable","requiredRule","required","message","CustomForm","list","onFinish","loading","useState","setPrevious","Form","useForm","form","merchantCompromiseAvailable","setMerchantCompromiseAvailable","useEffect","getFieldValue","setFieldsValue","title","onValuesChange","_","allValues","className","type","Item","label","tooltip","rules","options","sort","map","value","mode","includes","valuePropName","Group","disabled","htmlType","nF","number","toLocaleString","numberColWidth","NumberCell","children","formattedNumber","format","Math","abs","Investments","dataSource","investments","data","key","columns","dataIndex","sorter","a","b","localeCompare","render","price","width","profits","social","pagination","Others","Ledger","initialStandings","nonInvestmentChanges","investmentChanges","sum","category","money","bordered","expandable","expandedRowRender","rowExpandable","defaultExpandAllRows","summary","Summary","Row","Cell","colSpan","Addition","startingValue","dataSources","index","scope","values","explanation","join","toString","reduce","acc","val","preliminaryChanges","filter","Boolean","baseValue","chapter3Investments","roundOneChanges","roundOneValue","Givini","roundOneInvestments","decisions","givini","Result","previousInvestments","Failure","status","socialRequirement","setResult","runInWoker","setError","undefined","misc","giviniStart","giviniBaseValue","giviniExtra","giviniRoundOneValue","nonInvestmentChangesList","params","otherRequirements","donovanKick","result","FirstRound","error","Title","Typography","Disclaimer","href","description","showIcon","Loading","combinationsCount","progress","investmentsCount","preprogress","visible","centered","closable","footer","percent","round","App","workerInstance","setWorkerInstance","setLoading","setCombinationsCount","setProgress","setInvestmentsCount","setPreprogress","worker","terminate","prepare","i","preprocess","batchSize","ceil","end","min","process","clean","buildRunInWorker","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f4a14690.chunk.js","sourcesContent":["\n\t\t\t\tvar addMethods = require(\"../node_modules/workerize-loader/dist/rpc-wrapper.js\")\n\t\t\t\tvar methods = [\"prepare\",\"preprocess\",\"process\",\"clean\"]\n\t\t\t\tmodule.exports = function() {\n\t\t\t\t\tvar w = new Worker(__webpack_public_path__ + \"102891712d96f2e83112.worker.js\", { name: \"[hash].worker.js\" })\n\t\t\t\t\taddMethods(w, methods)\n\t\t\t\t\t\n\t\t\t\t\treturn w\n\t\t\t\t}\n\t\t\t","import { Form, Select, InputNumber, Button, Card, Checkbox, Radio } from 'antd';\nimport { useEffect, useState } from 'react';\n\nconst possiblePrevious = [\n  \"Min's Trade Route\",\n  'Yhilini Succubi Trade',\n  'Yhilini Bank Core Lender',\n  'Mercenary Offices',\n  'Theltiar Rentals',\n  'Theltiar Flowhouse',\n  'Denmiel Mushrooms',\n  'Denmiel Archives',\n  'Eustrin Guild',\n  'Gasm Falls Trade',\n  'Premium Steel Owner',\n];\n\nconst initialValues = {\n  previous: [\n    'Premium Steel Owner',\n    \"Min's Trade Route\",\n    'Yhilini Succubi Trade',\n    'Eustrin Guild',\n  ],\n  remainingPron: 5000,\n  baseProfit: 2000000,\n  chapter1Bank: true,\n  chapter1Steel: false,\n  strategy: 'social',\n  startingSocial: 34,\n  chapter3Infrastructure: true,\n  merchantSolution: 'neutral',\n  jhenno: 'religion',\n  magicalItems: 'givini',\n};\n\nconst toSelectOptions = (list) => {\n  return [...list].sort().map((value) => {\n    return {\n      label: value,\n      value: value,\n    };\n  });\n};\n\nconst isMerchantCompromiseAvailable = ({ strategy, jhenno }) =>\n  strategy !== 'money' && jhenno !== 'politics';\n\nconst requiredRule = { required: true, message: `Please provide a value.` };\n\nconst CustomForm = ({ onFinish, loading }) => {\n  const [previous, setPrevious] = useState(initialValues.previous);\n\n  const [form] = Form.useForm();\n  const [merchantCompromiseAvailable, setMerchantCompromiseAvailable] =\n    useState(isMerchantCompromiseAvailable(initialValues));\n  useEffect(() => {\n    if (\n      !merchantCompromiseAvailable &&\n      form.getFieldValue('merchantSolution') === 'neutral'\n    ) {\n      form.setFieldsValue({ merchantSolution: 'wait' });\n    }\n  }, [form, merchantCompromiseAvailable]);\n\n  return (\n    <Card title={`Round one`}>\n      <Form\n        initialValues={initialValues}\n        onFinish={onFinish}\n        onValuesChange={(_, allValues) => {\n          setPrevious(allValues.previous);\n          setMerchantCompromiseAvailable(\n            isMerchantCompromiseAvailable(allValues)\n          );\n        }}\n        className=\"first-round-form\"\n        form={form}\n      >\n        <Card title={`The past`} type=\"inner\">\n          <div className=\"numbers\">\n            <Form.Item\n              label={`ProN remaining at the end of chapter 3`}\n              name=\"remainingPron\"\n              tooltip={`In the Calculator, go to \"War Investment Phase\" and copy the value next to \"ProN available\".`}\n              rules={[requiredRule]}\n            >\n              <InputNumber />\n            </Form.Item>\n            <Form.Item\n              label={`Total profit at the start of chapter 4`}\n              name=\"baseProfit\"\n              tooltip={`In the Calculator, go to \"First Tower Run and Investment and copy the value next to \"Total ProN Return\".`}\n              rules={[requiredRule]}\n            >\n              <InputNumber />\n            </Form.Item>\n            <Form.Item\n              label={`Your social standing at the start of chapter 4`}\n              name=\"startingSocial\"\n              tooltip={`In the Calculator, go to \"War Investment Phase\" and copy the value next to \"Social Score\".`}\n              rules={[requiredRule]}\n            >\n              <InputNumber />\n            </Form.Item>\n          </div>\n\n          <Form.Item\n            label={`Investments already bought during chapters 2/3`}\n            name=\"previous\"\n          >\n            <Select\n              options={toSelectOptions(possiblePrevious)}\n              mode=\"multiple\"\n            />\n          </Form.Item>\n\n          <div className=\"checkboxes\">\n            {!previous.includes('Yhilini Bank Core Lender') && (\n              <Form.Item name=\"chapter1Bank\" valuePropName=\"checked\">\n                <Checkbox>{`You invested 25,000 ProN in the Yhilin Bank during chapter 1.`}</Checkbox>\n              </Form.Item>\n            )}\n            {!previous.includes('Premium Steel Owner') && (\n              <Form.Item name=\"chapter1Steel\" valuePropName=\"checked\">\n                <Checkbox>{`You invested 20,000 ProN in Premium Steel during chapter 1.`}</Checkbox>\n              </Form.Item>\n            )}\n            {!(\n              previous.includes('Yhilini Succubi Trade') &&\n              previous.includes('Mercenary Offices')\n            ) && (\n              <Form.Item name=\"chapter3Infrastructure\" valuePropName=\"checked\">\n                <Checkbox>{`You funded Yhilin Infrastructure during chapter 3.`}</Checkbox>\n              </Form.Item>\n            )}\n          </div>\n        </Card>\n\n        <Card title={`Strategy`} type=\"inner\">\n          <Form.Item\n            name=\"strategy\"\n            label={`Main strategy`}\n            rules={[requiredRule]}\n          >\n            <Radio.Group\n              options={[\n                {\n                  label: `Focus on profits; do only the bare minimum for the Ardan succession crisis (New Givini ≥ 25).`,\n                  value: 'money',\n                },\n                {\n                  label: `Mix profits and social; reach most thresholds for the Ardan succession crisis (New Givini ≥ 25, Social ≥ 40).`,\n                  value: 'social',\n                },\n                {\n                  label: `Go all in on the Ardan succession crisis (New Givini ≥ 25, Social ≥ 40, dedicated investments).`,\n                  value: 'succession',\n                },\n              ]}\n            />\n          </Form.Item>\n          <div className=\"selects\">\n            <Form.Item label={`Jhenno's cooperation`} name=\"jhenno\">\n              <Select\n                options={[\n                  {\n                    value: 'politics',\n                    label: `Politics`,\n                  },\n                  {\n                    value: 'religion',\n                    label: `Religion`,\n                  },\n                ]}\n              />\n            </Form.Item>\n            <Form.Item label={`Rose's house magical items`} name=\"magicalItems\">\n              <Select\n                options={[\n                  {\n                    value: 'givini',\n                    label: `Givini`,\n                  },\n                  {\n                    value: 'takkan',\n                    label: `Tak'Kan`,\n                  },\n                ]}\n              />\n            </Form.Item>\n            <Form.Item label={`Merchant dispute`} name=\"merchantSolution\">\n              <Select\n                options={[\n                  {\n                    value: 'neutral',\n                    label:\n                      `Neutral compromise` +\n                      (!merchantCompromiseAvailable\n                        ? ` (unavailable with this strategy)`\n                        : ''),\n                    disabled: !merchantCompromiseAvailable,\n                  },\n                  {\n                    value: 'givini',\n                    label: `Favor New Givini`,\n                  },\n                  {\n                    value: 'wait',\n                    label: `Wait`,\n                  },\n                ]}\n              />\n            </Form.Item>\n          </div>\n        </Card>\n\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\n            {`Submit`}\n          </Button>\n        </Form.Item>\n      </Form>\n    </Card>\n  );\n};\n\nexport default CustomForm;\n","import { Table } from 'antd';\n\nconst nF = (number) => number.toLocaleString('en-US');\n\nconst numberColWidth = 120;\n\nconst NumberCell = ({ children, format }) => {\n  const number = children;\n  const formattedNumber = !!format ? nF(Math.abs(number)) : Math.abs(number);\n\n  return `${number < 0 ? `-` : `+`}${formattedNumber}`;\n};\n\nconst Investments = ({ investments }) => {\n  const dataSource = investments.map(({ name, ...data }) => {\n    return {\n      key: name,\n      name,\n      ...data,\n    };\n  });\n\n  const columns = [\n    {\n      title: `Name`,\n      dataIndex: 'name',\n      sorter: (a, b) => a.name.localeCompare(b.name),\n    },\n    {\n      title: `Price`,\n      dataIndex: 'price',\n      render: (price) => nF(price),\n      sorter: (a, b) => a.price - b.price,\n      width: numberColWidth,\n    },\n    {\n      title: `Profits`,\n      dataIndex: 'profits',\n      render: (profits) => nF(profits),\n      sorter: (a, b) => a.profits - b.profits,\n      width: numberColWidth,\n    },\n    {\n      title: `Social`,\n      dataIndex: 'social',\n      render: (social = 0) => <NumberCell>{social}</NumberCell>,\n      width: numberColWidth,\n    },\n  ];\n\n  return <Table dataSource={dataSource} columns={columns} pagination={false} />;\n};\n\nconst Others = ({ list = [] }) => {\n  const dataSource = list.map(({ name, ...data }) => {\n    return {\n      key: name,\n      name,\n      ...data,\n    };\n  });\n\n  const render = (value = 0) => <NumberCell format={true}>{value}</NumberCell>;\n\n  const columns = [\n    {\n      title: `Name`,\n      dataIndex: 'name',\n    },\n    {\n      title: `Price`,\n      dataIndex: 'price',\n      render,\n      width: numberColWidth,\n    },\n    {\n      title: `Profits`,\n      dataIndex: 'profits',\n      render,\n      width: numberColWidth,\n    },\n    {\n      title: `Social`,\n      dataIndex: 'social',\n      render,\n      width: numberColWidth,\n    },\n  ];\n\n  return <Table dataSource={dataSource} columns={columns} pagination={false} />;\n};\n\nconst Ledger = ({\n  initialStandings,\n  nonInvestmentChanges,\n  investmentChanges,\n}) => {\n  const render = (value, { key }) => {\n    if (['base', 'total'].includes(key)) {\n      return nF(value);\n    }\n    return <NumberCell format={true}>{value}</NumberCell>;\n  };\n\n  const columns = [\n    {\n      dataIndex: 'category',\n    },\n    {\n      title: `ProN`,\n      dataIndex: 'money',\n      render,\n      width: numberColWidth,\n    },\n    {\n      title: `Profits`,\n      dataIndex: 'profits',\n      render,\n      width: numberColWidth,\n    },\n    {\n      title: `Social`,\n      dataIndex: 'social',\n      render,\n      width: numberColWidth,\n    },\n  ];\n\n  const sum = (key) =>\n    initialStandings[key] + nonInvestmentChanges[key] + investmentChanges[key];\n\n  const dataSource = [\n    {\n      ...initialStandings,\n      key: 'base',\n      category: `Previously`,\n    },\n    {\n      ...investmentChanges,\n      key: 'investments',\n      category: `Changes from investments`,\n      money: -investmentChanges.price,\n    },\n    {\n      ...nonInvestmentChanges,\n      key: 'other',\n      category: `Other changes`,\n    },\n  ];\n\n  return (\n    <Table\n      dataSource={dataSource}\n      columns={columns}\n      pagination={false}\n      bordered={true}\n      expandable={{\n        expandedRowRender: ({ key }) => {\n          if (key === 'investments') {\n            return <Investments investments={investmentChanges.investments} />;\n          }\n          if (key === 'other') {\n            return <Others list={nonInvestmentChanges.list} />;\n          }\n          return null;\n        },\n        rowExpandable: ({ key }) => ['investments', 'other'].includes(key),\n        defaultExpandAllRows: true,\n      }}\n      summary={() => {\n        return (\n          <Table.Summary.Row>\n            <Table.Summary.Cell colSpan={2}>{`Result`}</Table.Summary.Cell>\n            <Table.Summary.Cell>\n              {nF(\n                initialStandings.money +\n                  nonInvestmentChanges.money -\n                  investmentChanges.price\n              )}\n            </Table.Summary.Cell>\n            <Table.Summary.Cell>{nF(sum('profits'))}</Table.Summary.Cell>\n            <Table.Summary.Cell>{sum('social')}</Table.Summary.Cell>\n          </Table.Summary.Row>\n        );\n      }}\n    />\n  );\n};\n\nexport default Ledger;\n","const Addition = ({ startingValue = 0, dataSources }) => {\n  return (\n    <table className=\"addition\">\n      <tbody>\n        <tr>\n          <td>{`Initial value`}</td>\n          <td>{startingValue}</td>\n          <td></td>\n        </tr>\n      </tbody>\n      {dataSources.map(({ title, dataSource }, index) => {\n        return (\n          <tbody key={index.toString()}>\n            <tr>\n              <th colSpan=\"3\" scope=\"col\">\n                {title}\n              </th>\n            </tr>\n            {dataSource.map(({ label, values, explanation }, index) => {\n              return (\n                <tr key={index.toString()}>\n                  <td>{label}</td>\n                  <td>{values.map((value) => `+${value}`).join(' ')}</td>\n                  <td>{explanation}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        );\n      })}\n      <tfoot>\n        <tr>\n          <th scope=\"row\">{`Total`}</th>\n          <td>\n            {startingValue +\n              dataSources.reduce(\n                (acc, { dataSource }) =>\n                  acc +\n                  dataSource.reduce(\n                    (acc, { values }) =>\n                      acc + values.reduce((acc, val) => acc + val),\n                    0\n                  ),\n                0\n              )}\n          </td>\n        </tr>\n      </tfoot>\n    </table>\n  );\n};\n\nexport default Addition;\n","const sum = (list) =>\n  list.reduce(\n    (acc, { values }) => acc + values.reduce((acc, value) => acc + value, 0),\n    0\n  );\n\nexport const startingValue = -5;\n\nexport const preliminaryChanges = ({ investments }) => {\n  return [\n    { label: `Petitions`, values: [5, 5, 2, 2, 2] },\n    {\n      label: `New Givini Trade`,\n      values: [5, 1],\n      explanation: `+5 when bought, +1 at round's start`,\n    },\n    investments.includes(\"Min's Trade Route\") && {\n      label: `Min's Trade Route`,\n      values: [1],\n    },\n  ].filter(Boolean);\n};\n\nexport const baseValue = ({ chapter3Investments }) =>\n  startingValue + sum(preliminaryChanges({ investments: chapter3Investments }));\n\nexport const roundOneChanges = ({ merchantSolution, magicalItems }) => {\n  return [\n    magicalItems === 'givini' && {\n      label: `House Rose's magical items: Givini`,\n      values: [2],\n    },\n    merchantSolution === 'neutral' && {\n      label: `Merchant dispute: Neutral compromise`,\n      values: [1],\n    },\n    merchantSolution === 'givini' && {\n      label: `Merchant dispute: Favor New Givini`,\n      values: [2],\n    },\n    { label: `Givino Vinai equipment shop girl`, values: [1] },\n    { label: `Givini king`, values: [1] },\n    {\n      label: `New Givini Trade`,\n      values: [1],\n      explanation: `+1 at the end of the round (before profits from the Givini Orc Merchant are computed)`,\n    },\n  ].filter(Boolean);\n};\n\nexport const roundOneValue = (...params) => sum(roundOneChanges(...params));\n","import Addition from './Addition';\nimport { startingValue, preliminaryChanges, roundOneChanges } from '../givini';\n\nconst Givini = ({\n  chapter3Investments = [],\n  roundOneInvestments = [],\n  decisions = {},\n}) => {\n  return (\n    <Addition\n      startingValue={startingValue}\n      dataSources={[\n        {\n          title: `Chapter start`,\n          dataSource: preliminaryChanges({ investments: chapter3Investments }),\n        },\n        {\n          title: `Investments`,\n          dataSource: roundOneInvestments\n            .filter(({ givini = 0 }) => givini !== 0)\n            .map(({ name, givini }) => {\n              return { label: name, values: [givini] };\n            })\n            .sort(({ label: a }, { label: b }) => a.localeCompare(b)),\n        },\n        {\n          title: `Other changes`,\n          dataSource: roundOneChanges(decisions),\n        },\n      ]}\n    />\n  );\n};\n\nexport default Givini;\n","import Ledger from './Ledger';\nimport { Card } from 'antd';\nimport Givini from './Givini';\n\nconst Result = ({\n  initialStandings,\n  nonInvestmentChanges,\n  investmentChanges,\n  decisions,\n}) => {\n  return (\n    <Card title={`Changes`} className=\"results\">\n      <Card title={`Ledger`} type=\"inner\" className=\"ledger\">\n        <Ledger\n          initialStandings={initialStandings}\n          nonInvestmentChanges={nonInvestmentChanges}\n          investmentChanges={investmentChanges}\n        />\n      </Card>\n      <Card title={`Countries`} type=\"inner\">\n        <Card title={`New Givini`} type=\"inner\">\n          <Givini\n            chapter3Investments={initialStandings.previousInvestments}\n            roundOneInvestments={investmentChanges.investments}\n            decisions={decisions}\n          />\n        </Card>\n      </Card>\n    </Card>\n  );\n};\n\nexport default Result;\n","import { Result, Card } from 'antd';\n\nconst Failure = ({ message }) => {\n  return (\n    <Card>\n      <Result status=\"warning\" title={message} />\n    </Card>\n  );\n};\n\nexport default Failure;\n","import { useState } from 'react';\nimport Form from './Form';\nimport Result from '../results';\nimport Failure from '../Failure';\nimport {\n  baseValue as giviniBaseValue,\n  roundOneValue as giviniRoundOneValue,\n} from '../givini';\n\nconst socialRequirement = ({ strategy, startingSocial, jhenno }) => {\n  if (strategy === 'money') {\n    return 0;\n  }\n  if (jhenno === 'politics') {\n    return 39 - startingSocial;\n  }\n  return 40 - startingSocial;\n};\n\nconst giviniRequirement = ({ giviniStart, giviniExtra }) => {\n  const absoluteRequirement = 25;\n  const offset = 3; // Points earned after the requirement matters\n\n  return absoluteRequirement - giviniStart - giviniExtra + offset;\n};\n\nconst onFinish = async ({ values, setResult, runInWoker, setError }) => {\n  setError(undefined);\n\n  const {\n    previous = [],\n    remainingPron,\n    baseProfit,\n    strategy,\n    startingSocial,\n    merchantSolution,\n    jhenno,\n    magicalItems,\n    ...misc\n  } = values;\n\n  const decisions = { strategy, merchantSolution, magicalItems };\n\n  const giviniStart = giviniBaseValue({ chapter3Investments: previous });\n  const giviniExtra = giviniRoundOneValue(decisions);\n\n  const initialStandings = {\n    givini: giviniStart,\n    social: startingSocial,\n    money: remainingPron + baseProfit,\n    profits: baseProfit,\n    previousInvestments: previous,\n  };\n\n  const nonInvestmentChangesList = [\n    jhenno === 'politics' && {\n      name: `Jhenno's political cooperation`,\n      social: 1,\n    },\n    {\n      name: `Succession crisis' reward (best result)`,\n      social: 3,\n    },\n    {\n      name: `The Three Trades become less profitable`,\n      profits: -300000,\n    },\n  ].filter(Boolean);\n\n  const nonInvestmentChanges = {\n    givini: giviniExtra,\n    money: 0,\n    profits: nonInvestmentChangesList.reduce(\n      (acc, { profits = 0 }) => acc + profits,\n      0\n    ),\n    social: nonInvestmentChangesList.reduce(\n      (acc, { social = 0 }) => acc + social,\n      0\n    ),\n    list: nonInvestmentChangesList,\n  };\n\n  const params = {\n    previousInvestments: previous,\n    money: remainingPron + baseProfit,\n    otherRequirements: {\n      social: socialRequirement({ startingSocial, strategy, jhenno }),\n      givini: giviniRequirement({ giviniStart, giviniExtra }),\n      donovanKick: strategy === 'succession',\n    },\n    giviniStart,\n    giviniExtra,\n    ...misc,\n  };\n\n  const result = await runInWoker(params);\n\n  if (!result) {\n    setResult(undefined);\n    setError(\n      `Couldn't find a working combination of investments for that strategy with these starting values, sorry.`\n    );\n    return;\n  }\n\n  setResult({\n    initialStandings,\n    nonInvestmentChanges,\n    investmentChanges: result,\n    decisions,\n  });\n};\n\nconst FirstRound = ({ runInWoker, loading }) => {\n  const [result, setResult] = useState();\n  const [error, setError] = useState();\n\n  return (\n    <>\n      <Form\n        onFinish={(values) => {\n          onFinish({ values, setResult, runInWoker, setError });\n        }}\n        loading={loading}\n      />\n      {error && <Failure message={error} />}\n      {result && <Result {...result} />}\n    </>\n  );\n};\n\nexport default FirstRound;\n","import { Alert, Typography } from 'antd';\n\nconst { Title } = Typography;\n\nconst Disclaimer = () => {\n  return (\n    <div className=\"disclaimer\">\n      <div className=\"preamble\">\n        <Title>{`Investment advisor`}</Title>\n        <p>\n          {`A tool to help you choose the best theoretical best possible investments for (the early steps of chapter 4 of) `}\n          <a href=\"https://the-last-sovereign.blogspot.com/\">{`The Last Sovereign`}</a>\n          {`.`}\n        </p>\n        <p>{`Just fill in the requested information, choose your strategy and let a quasi-brute force algorithm determine what's best for you (assuming a definition of best here as highest short term returns, then the lowest price, while still fulfilling the requirements of your strategy).`}</p>\n        <p>\n          {`This is definetely an advanced tool, intended for people who are already familiar with the game's `}\n          <a href=\"https://thelastsovereign.miraheze.org/wiki/Secret_stats\">\n            {`inner workings`}\n          </a>\n          {`, with the awesome `}\n\n          <a href=\"https://thelastsovereign.flarum.cloud/d/15-calculator\">{`Calculator`}</a>\n          {`, and are now looking for the last lousy optimizations they might have missed.`}\n        </p>\n      </div>\n      <Alert\n        message={`Assumptions`}\n        description={\n          <>\n            <span>{`This tool takes for granted that:`}</span>\n            <ol>\n              <li>{`The Succubus Tower was visited during chapter 1.`}</li>\n              <li>{`AriGarda was bribed during chapter 2.`}</li>\n              <li>{`Tradesmasher and the Succubus Armorer were met during chapter 3.`}</li>\n              <li>{`The three unique Trades (New Givini, Tak'Kan and Chalice States) were bought at the end of chapter 3.`}</li>\n              <li>{`Chapter 3 in general was good enough for Yhilin to reach its final state during the first investment phase of Chapter 4.`}</li>\n              <li>{`Chapter 3 in general and the war in particular were good enough for all petitions favorable to Givini to appear.`}</li>\n              <li>{`All such petitions were approved.`}</li>\n              <li>{`If purcharsed, the Givini Orc Merchant is bought before any other investment of the round.`}</li>\n            </ol>\n          </>\n        }\n        type=\"info\"\n        showIcon\n      />\n    </div>\n  );\n};\n\nexport default Disclaimer;\n","import { Progress, Divider, Modal } from 'antd';\n\nconst Loading = ({\n  combinationsCount,\n  progress,\n  investmentsCount,\n  preprogress,\n}) => {\n  if (!investmentsCount) {\n    return null;\n  }\n\n  return (\n    <Modal visible={true} centered={true} closable={false} footer={null}>\n      <div>\n        <p>\n          {`Prefiltering ${(2 ** investmentsCount).toLocaleString('en-US')} (2`}\n          <sup>{investmentsCount}</sup>\n          {`) possibilities…`}\n        </p>\n        <Progress percent={Math.round(preprogress * 100)} />\n      </div>\n      {!!combinationsCount && (\n        <>\n          <Divider />\n          <div>\n            <p>{`Processing ${combinationsCount.toLocaleString(\n              'en-US'\n            )} remaining possibilities…`}</p>\n            <Progress percent={Math.round(progress * 10000) / 100} />\n          </div>\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default Loading;\n","import './App.css';\nimport FirstRound from './first-round';\nimport { useEffect, useState } from 'react';\nimport worker from 'workerize-loader!./worker'; // eslint-disable-line import/no-webpack-loader-syntax\nimport Disclaimer from './Disclaimer';\nimport Loading from './Loading';\n\nconst buildRunInWorker =\n  ({\n    workerInstance,\n    setLoading,\n    setCombinationsCount,\n    setProgress,\n    setInvestmentsCount,\n    setPreprogress,\n  }) =>\n  async (params) => {\n    setLoading(true);\n\n    const investmentsCount = await workerInstance.prepare(params);\n    setInvestmentsCount(investmentsCount);\n    setPreprogress(0);\n    let combinationsCount = 0;\n    for (let i = 0; i <= investmentsCount; i++) {\n      combinationsCount += await workerInstance.preprocess();\n      setPreprogress(i / investmentsCount);\n    }\n\n    setCombinationsCount(combinationsCount);\n    setProgress(0);\n    const batchSize = 10000;\n    let result;\n    for (let i = 0; i < Math.ceil(combinationsCount / batchSize); i++) {\n      const end = Math.min((i + 1) * batchSize, combinationsCount);\n      result = await workerInstance.process(i * batchSize, end);\n      setProgress(end / combinationsCount);\n    }\n\n    await workerInstance.clean();\n\n    setLoading(false);\n    setCombinationsCount(undefined);\n    setInvestmentsCount(undefined);\n    setProgress(0);\n    setPreprogress(0);\n\n    return result;\n  };\n\nconst App = () => {\n  const [workerInstance, setWorkerInstance] = useState();\n  const [loading, setLoading] = useState(false);\n  const [combinationsCount, setCombinationsCount] = useState();\n  const [progress, setProgress] = useState(0);\n  const [investmentsCount, setInvestmentsCount] = useState();\n  const [preprogress, setPreprogress] = useState(0);\n\n  useEffect(() => {\n    if (!workerInstance) {\n      setWorkerInstance(worker());\n    }\n\n    return () => {\n      workerInstance?.terminate();\n    };\n  }, [workerInstance]);\n\n  if (!workerInstance) {\n    return null;\n  }\n\n  const runInWoker = buildRunInWorker({\n    workerInstance,\n    setLoading,\n    setCombinationsCount,\n    setProgress,\n    setInvestmentsCount,\n    setPreprogress,\n  });\n\n  return (\n    <div>\n      <Disclaimer />\n      <FirstRound runInWoker={runInWoker} loading={loading} />\n      {loading && (\n        <Loading\n          combinationsCount={combinationsCount}\n          progress={progress}\n          preprogress={preprogress}\n          investmentsCount={investmentsCount}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}